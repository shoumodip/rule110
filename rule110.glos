import std.io
import std.linux

const BOARD_CAP = 100
let board bool[BOARD_CAP]

let main() {
    board[BOARD_CAP - 1] = true

    let output = io.File(linux.stdout)

    for let i = 0, i < BOARD_CAP, i += 1 {
        for let j = 0, j < BOARD_CAP, j += 1 {
            if board[j] {
                fprint(&output, '*')
            } else {
                fprint(&output, ' ')
            }
        }

        fprint(&output, '\n')
        io.flush(&output)

        let pattern = (board[0] as uint << 1) | board[1] as uint
        for let j = 1, j < BOARD_CAP - 1, j += 1 {
            pattern = ((pattern << 1) & 7) | board[j + 1] as uint
            board[j] = ((110 >> pattern) & 1) as bool
        }
    }

    io.close(&output)
}
